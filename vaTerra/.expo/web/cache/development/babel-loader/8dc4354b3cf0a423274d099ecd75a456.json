{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { VariantsBox } from \"react-native-web/dist/index\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getPlants } from \"../utils/service\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Item = function Item(props) {\n  console.log('item()', props);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: props.family\n    })\n  });\n};\n\nvar PlantSearchBar = function PlantSearchBar(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  var _useState7 = useState({\n    common: [1, 2]\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectItem = _useState8[0],\n      setSelectedItem = _useState8[1];\n\n  var data = function _callee() {\n    var filteredData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPlants());\n\n          case 3:\n            filteredData = _context.sent;\n            setFilteredDataSource(filteredData);\n            setMasterDataSource(filteredData);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    data();\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    console.log('text', text);\n\n    if (text) {\n      console.log(masterDataSource);\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.common[0] ? item.common[0].toLowerCase() : ''.toLowerCase();\n        var textData = text.toLowerCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      console.log('filteredData', newData);\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var onBankSelected = function onBankSelected(value) {\n    setFilteredDataSource([]);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(Item, {\n      family: item.family\n    });\n  };\n\n  var _renderItem = function _renderItem(item) {\n    return _jsx(View, {\n      style: styles.item,\n      children: _jsx(Text, {\n        children: item.label\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      round: true,\n      style: styles.searchBar,\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear(text) {\n        return searchFilterFunction('');\n      },\n      placeholder: \"Search plant by it's common name\",\n      value: search\n    }), _jsx(SelectDropdown, {\n      data: filteredDataSource,\n      onSelect: function onSelect(selectedItem, index) {\n        setSelectedItem(selectedItem);\n        console.log(selectItem, 'selecteditem');\n      },\n      defaultButtonText: 'Search',\n      buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n        return selectedItem.common[0];\n      },\n      rowTextForSelection: function rowTextForSelection(item, index) {\n        return item.common[0];\n      },\n      dropdownBackgroundColor: \"#ECECEC\"\n    }), selectItem && _jsx(Text, {\n      children: selectItem.common[0]\n    })]\n  });\n};\n\nexport default PlantSearchBar;\nvar styles = StyleSheet.create({\n  searchBar: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n    width: 260\n  },\n  icon: {\n    marginRight: 5,\n    width: 18,\n    height: 18\n  }\n});","map":{"version":3,"names":["VariantsBox","React","useState","useEffect","getPlants","SelectDropdown","Item","props","console","log","family","PlantSearchBar","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","common","selectItem","setSelectedItem","data","filteredData","searchFilterFunction","text","newData","filter","item","itemData","toLowerCase","textData","indexOf","onBankSelected","value","renderItem","_renderItem","styles","label","searchBar","selectedItem","index","StyleSheet","create","height","margin","borderWidth","padding","borderRadius","width","icon","marginRight"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/SearchBar.jsx"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  FlatList,\n  TouchableOpacity,\n  VariantsBox,\n} from 'react-native';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getPlants } from '../utils/service';\nimport SelectDropdown from 'react-native-select-dropdown';\n\nconst Item = (props) => {\n  console.log('item()', props);\n  return (\n    <View>\n      <Text>{props.family}</Text>\n    </View>\n  );\n};\nconst PlantSearchBar = (props) => {\n  const [search, setSearch] = useState('');\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [masterDataSource, setMasterDataSource] = useState([]);\n  const [selectItem, setSelectedItem] = useState({ common: [1, 2] });\n\n  const data = async () => {\n    try {\n      const filteredData = await getPlants();\n      setFilteredDataSource(filteredData);\n      setMasterDataSource(filteredData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    data();\n  }, []);\n  const searchFilterFunction = (text) => {\n    console.log('text', text);\n    if (text) {\n      console.log(masterDataSource);\n      const newData = masterDataSource.filter(function (item) {\n        const itemData = item.common[0]\n          ? item.common[0].toLowerCase()\n          : ''.toLowerCase();\n        const textData = text.toLowerCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      console.log('filteredData', newData);\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n  const onBankSelected = (value) => {\n    // setBankName(value);\n    setFilteredDataSource([]);\n  };\n  const renderItem = ({ item }) => <Item family={item.family} />;\n\n  const _renderItem = (item) => {\n    return (\n      <View style={styles.item}>\n        <Text>{item.label}</Text>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      <TextInput\n        round\n        style={styles.searchBar}\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={(text) => searchFilterFunction('')}\n        placeholder=\"Search plant by it's common name\"\n        value={search}\n      />\n      <SelectDropdown\n        data={filteredDataSource}\n        onSelect={(selectedItem, index) => {\n          setSelectedItem(selectedItem);\n          console.log(selectItem, 'selecteditem');\n        }}\n        defaultButtonText={'Search'}\n        // defaultButtonText={'⬇️'}\n        buttonTextAfterSelection={(selectedItem, index) => {\n          return selectedItem.common[0];\n        }}\n        rowTextForSelection={(item, index) => {\n          return item.common[0];\n        }}\n        // buttonStyle={{\n        //   height: 40,\n        //   // width: dropdown ? 120 : 60,\n        //   marginTop: 10,\n        //   width: 200,\n        //   borderRadius: 1000,\n        //   backgroundColor: '#ECECEC',\n        // }}\n        dropdownBackgroundColor=\"#ECECEC\"\n      />\n      {selectItem && <Text>{selectItem.common[0]}</Text>}\n    </View>\n  );\n};\n\nexport default PlantSearchBar;\n\nconst styles = StyleSheet.create({\n  searchBar: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n    width: 260,\n  },\n  icon: {\n    marginRight: 5,\n    width: 18,\n    height: 18,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}