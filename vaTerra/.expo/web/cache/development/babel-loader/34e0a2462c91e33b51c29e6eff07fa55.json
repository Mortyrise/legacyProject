{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect } from 'react';\nimport Plant from \"./Plant\";\nimport { useState } from 'react';\nimport { getPlants, getUser } from \"../utils/service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Hibernacle = function Hibernacle(props) {\n  console.log('Hibernacle()');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      plants = _useState2[0],\n      setPlants = _useState2[1];\n\n  var getData = function _callee() {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getUser(8));\n\n          case 2:\n            data = _context.sent;\n            setPlants(data.plantsArray);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    console.log('fetching data');\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        children: \"User's Hibernacle\"\n      })\n    }), _jsx(View, {\n      children: plants.map(function (element) {\n        return _jsx(Plant, {\n          plant: element\n        }, element.id);\n      })\n    })]\n  });\n};\n\nexport default Hibernacle;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","Plant","useState","getPlants","getUser","Hibernacle","props","console","log","plants","setPlants","getData","data","plantsArray","map","element","id","styles","StyleSheet","create"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/Hibernacle.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Plant from './Plant';\nimport { useState } from 'react';\nimport { getPlants, getUser } from '../utils/service';\n\nconst Hibernacle = (props) => {\n  console.log('Hibernacle()');\n  const [plants, setPlants] = useState([]);\n\n  const getData = async () => {\n    const data = await getUser(8);\n    setPlants(data.plantsArray);\n  };\n\n  useEffect(() => {\n    getData();\n    console.log('fetching data');\n  }, []);\n\n  return (\n    <View>\n      <View>\n        <Text>User's Hibernacle</Text>\n      </View>\n      <View>\n        {plants.map((element) => (\n          <Plant plant={element} key={element.id} />\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Hibernacle;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;EAC5BC,OAAO,CAACC,GAAR,CAAY,cAAZ;;EACA,gBAA4BN,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOO,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,OAAO,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACKP,OAAO,CAAC,CAAD,CADZ;;UAAA;YACRQ,IADQ;YAEdF,SAAS,CAACE,IAAI,CAACC,WAAN,CAAT;;UAFc;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAKAb,SAAS,CAAC,YAAM;IACdW,OAAO;IACPJ,OAAO,CAACC,GAAR,CAAY,eAAZ;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EADF,EAIE,KAAC,IAAD;MAAA,UACGC,MAAM,CAACK,GAAP,CAAW,UAACC,OAAD;QAAA,OACV,KAAC,KAAD;UAAO,KAAK,EAAEA;QAAd,GAA4BA,OAAO,CAACC,EAApC,CADU;MAAA,CAAX;IADH,EAJF;EAAA,EADF;AAYD,CA1BD;;AA4BA,eAAeX,UAAf;AAEA,IAAMY,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}