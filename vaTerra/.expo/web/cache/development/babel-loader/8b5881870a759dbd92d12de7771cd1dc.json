{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React from 'react';\nimport { SearchBar } from 'react-native-elements';\nimport { useState, useEffect } from 'react';\nimport { getPlants } from \"../utils/service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar PlantSearchBar = function PlantSearchBar(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  var data = function _callee() {\n    var _data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPlants());\n\n          case 3:\n            _data = _context.sent;\n            setFilteredDataSource(_data);\n            setMasterDataSource(_data);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    data();\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    console.log('text', text);\n\n    if (text) {\n      console.log(masterDataSource);\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.common[0] ? item.common[0].toLowerCase() : ''.toLowerCase();\n        var textData = text.toLowerCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      console.log('filteredData', newData);\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  return _jsx(View, {\n    children: _jsx(TextInput, {\n      round: true,\n      style: styles.searchBar,\n      searchIcon: {\n        size: 24\n      },\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear(text) {\n        return searchFilterFunction('');\n      },\n      placeholder: \"Search plant by it's common name\",\n      value: search\n    })\n  });\n};\n\nexport default PlantSearchBar;\nvar styles = StyleSheet.create({\n  searchBar: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n    width: 260\n  }\n});","map":{"version":3,"names":["React","SearchBar","useState","useEffect","getPlants","PlantSearchBar","props","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","data","console","log","searchFilterFunction","text","newData","filter","item","itemData","common","toLowerCase","textData","indexOf","styles","searchBar","size","StyleSheet","create","height","margin","borderWidth","padding","borderRadius","width"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/SearchBar.jsx"],"sourcesContent":["import { StyleSheet, Text, View, TextInput } from 'react-native';\nimport React from 'react';\nimport { SearchBar } from 'react-native-elements';\nimport { useState, useEffect } from 'react';\nimport { getPlants } from '../utils/service';\n\nconst PlantSearchBar = (props) => {\n  const [search, setSearch] = useState('');\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [masterDataSource, setMasterDataSource] = useState([]);\n\n  const data = async () => {\n    try {\n      const data = await getPlants();\n\n      setFilteredDataSource(data);\n      setMasterDataSource(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    data();\n  }, []);\n\n  const searchFilterFunction = (text) => {\n    console.log('text', text);\n    if (text) {\n      console.log(masterDataSource);\n      const newData = masterDataSource.filter(function (item) {\n        const itemData = item.common[0]\n          ? item.common[0].toLowerCase()\n          : ''.toLowerCase();\n        const textData = text.toLowerCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      console.log('filteredData', newData);\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  return (\n    <View>\n      <TextInput\n        round\n        style={styles.searchBar}\n        searchIcon={{ size: 24 }}\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={(text) => searchFilterFunction('')}\n        placeholder=\"Search plant by it's common name\"\n        value={search}\n      />\n    </View>\n  );\n};\n\nexport default PlantSearchBar;\n\nconst styles = StyleSheet.create({\n  searchBar: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n    width: 260,\n  },\n});\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EAChC,gBAA4BJ,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOK,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAoDN,QAAQ,CAAC,EAAD,CAA5D;EAAA;EAAA,IAAOO,kBAAP;EAAA,IAA2BC,qBAA3B;;EACA,iBAAgDR,QAAQ,CAAC,EAAD,CAAxD;EAAA;EAAA,IAAOS,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEA,IAAMC,IAAI,GAAG;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEUT,SAAS,EAFnB;;UAAA;YAEHS,KAFG;YAITH,qBAAqB,CAACG,KAAD,CAArB;YACAD,mBAAmB,CAACC,KAAD,CAAnB;YALS;YAAA;;UAAA;YAAA;YAAA;YAOTC,OAAO,CAACC,GAAR;;UAPS;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAb;;EAWAZ,SAAS,CAAC,YAAM;IACdU,IAAI;EACL,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAU;IACrCH,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;;IACA,IAAIA,IAAJ,EAAU;MACRH,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;MACA,IAAMO,OAAO,GAAGP,gBAAgB,CAACQ,MAAjB,CAAwB,UAAUC,IAAV,EAAgB;QACtD,IAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAY,CAAZ,IACbF,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,EADa,GAEb,GAAGA,WAAH,EAFJ;QAGA,IAAMC,QAAQ,GAAGP,IAAI,CAACM,WAAL,EAAjB;QACA,OAAOF,QAAQ,CAACI,OAAT,CAAiBD,QAAjB,IAA6B,CAAC,CAArC;MACD,CANe,CAAhB;MAOAV,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,OAA5B;MACAR,qBAAqB,CAACQ,OAAD,CAArB;MACAV,SAAS,CAACS,IAAD,CAAT;IACD,CAZD,MAYO;MACLP,qBAAqB,CAACC,gBAAD,CAArB;MACAH,SAAS,CAACS,IAAD,CAAT;IACD;EACF,CAlBD;;EAoBA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,SAAD;MACE,KAAK,MADP;MAEE,KAAK,EAAES,MAAM,CAACC,SAFhB;MAGE,UAAU,EAAE;QAAEC,IAAI,EAAE;MAAR,CAHd;MAIE,YAAY,EAAE,sBAACX,IAAD;QAAA,OAAUD,oBAAoB,CAACC,IAAD,CAA9B;MAAA,CAJhB;MAKE,OAAO,EAAE,iBAACA,IAAD;QAAA,OAAUD,oBAAoB,CAAC,EAAD,CAA9B;MAAA,CALX;MAME,WAAW,EAAC,kCANd;MAOE,KAAK,EAAET;IAPT;EADF,EADF;AAaD,CArDD;;AAuDA,eAAeF,cAAf;AAEA,IAAMqB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,MAAM,EAAE,EADC;IAETC,MAAM,EAAE,EAFC;IAGTC,WAAW,EAAE,CAHJ;IAITC,OAAO,EAAE,EAJA;IAKTC,YAAY,EAAE,EALL;IAMTC,KAAK,EAAE;EANE;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}