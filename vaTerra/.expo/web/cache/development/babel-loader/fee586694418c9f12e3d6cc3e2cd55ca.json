{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Slider from '@react-native-community/slider';\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { updateReminder } from \"../utils/service\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar IntervalSliders = function IntervalSliders(_ref) {\n  var plant = _ref.plant;\n\n  var _useState = useState(plant.wateringReminderInterval),\n      _useState2 = _slicedToArray(_useState, 2),\n      waterInterval = _useState2[0],\n      setWaterInterval = _useState2[1];\n\n  var handleValueChange = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            updateReminder({\n              _id: '62a21daf09bc8c794d8b02b3',\n              id: '8'\n            }, plant, waterInterval);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: {\n      paddingTop: 10,\n      marginTop: 30\n    },\n    children: [_jsxs(Text, {\n      children: [\" \", plant.nickName]\n    }), _jsx(Slider, {\n      style: {\n        width: 300,\n        height: 40\n      },\n      minimumValue: 1,\n      maximumValue: 15,\n      minimumTrackTintColor: 'rgb(151,179,128)',\n      onValueChange: function onValueChange(value) {\n        setWaterInterval(Math.floor(value));\n        handleValueChange();\n        console.log(Math.floor(value));\n      },\n      thumbTintColor: 'rgb(151,179,128)',\n      value: plant.wateringReminderInterval\n    }), _jsx(Text, {\n      children: waterInterval\n    })]\n  });\n};\n\nexport default IntervalSliders;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["Slider","React","useState","useEffect","updateReminder","IntervalSliders","plant","wateringReminderInterval","waterInterval","setWaterInterval","handleValueChange","_id","id","paddingTop","marginTop","nickName","width","height","value","Math","floor","console","log","styles","StyleSheet","create"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/IntervalSliders.jsx"],"sourcesContent":["import Slider from '@react-native-community/slider';\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Alert } from 'react-native';\nimport { updateReminder } from '../utils/service';\n\nconst IntervalSliders = ({ plant }) => {\n  const [waterInterval, setWaterInterval] = useState(\n    plant.wateringReminderInterval\n  );\n\n  const handleValueChange = async function () {\n    updateReminder(\n      { _id: '62a21daf09bc8c794d8b02b3', id: '8' },\n      plant,\n      waterInterval\n    );\n  };\n\n  return (\n    <View style={{ paddingTop: 10, marginTop: 30 }}>\n      <Text> {plant.nickName}</Text>\n      <Slider\n        style={{ width: 300, height: 40 }}\n        minimumValue={1}\n        maximumValue={15}\n        minimumTrackTintColor={'rgb(151,179,128)'}\n        onValueChange={(value) => {\n          setWaterInterval(Math.floor(value));\n          handleValueChange();\n          console.log(Math.floor(value));\n          //put request);\n        }}\n        thumbTintColor={'rgb(151,179,128)'}\n        value={plant.wateringReminderInterval}\n      />\n      <Text>{waterInterval}</Text>\n    </View>\n  );\n};\n\nexport default IntervalSliders;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAe;EAAA,IAAZC,KAAY,QAAZA,KAAY;;EACrC,gBAA0CJ,QAAQ,CAChDI,KAAK,CAACC,wBAD0C,CAAlD;EAAA;EAAA,IAAOC,aAAP;EAAA,IAAsBC,gBAAtB;;EAIA,IAAMC,iBAAiB,GAAG;IAAA;MAAA;QAAA;UAAA;YACxBN,cAAc,CACZ;cAAEO,GAAG,EAAE,0BAAP;cAAmCC,EAAE,EAAE;YAAvC,CADY,EAEZN,KAFY,EAGZE,aAHY,CAAd;;UADwB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA1B;;EAQA,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEK,UAAU,EAAE,EAAd;MAAkBC,SAAS,EAAE;IAA7B,CAAb;IAAA,WACE,MAAC,IAAD;MAAA,gBAAQR,KAAK,CAACS,QAAd;IAAA,EADF,EAEE,KAAC,MAAD;MACE,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB,CADT;MAEE,YAAY,EAAE,CAFhB;MAGE,YAAY,EAAE,EAHhB;MAIE,qBAAqB,EAAE,kBAJzB;MAKE,aAAa,EAAE,uBAACC,KAAD,EAAW;QACxBT,gBAAgB,CAACU,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAD,CAAhB;QACAR,iBAAiB;QACjBW,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAZ;MAED,CAVH;MAWE,cAAc,EAAE,kBAXlB;MAYE,KAAK,EAAEZ,KAAK,CAACC;IAZf,EAFF,EAgBE,KAAC,IAAD;MAAA,UAAOC;IAAP,EAhBF;EAAA,EADF;AAoBD,CAjCD;;AAmCA,eAAeH,eAAf;AAEA,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}