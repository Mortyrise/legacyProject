{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UnsupportedPlatform = function UnsupportedPlatform() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      children: \"Android is not supported yet!\"\n    })\n  });\n};\n\nvar MyRangeSlider = requireNativeComponent('RangeSlider', RangeSlider);\n\nvar RangeSlider = function (_Component) {\n  _inherits(RangeSlider, _Component);\n\n  var _super = _createSuper(RangeSlider);\n\n  function RangeSlider() {\n    _classCallCheck(this, RangeSlider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RangeSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return Platform.OS === 'ios' ? _jsx(MyRangeSlider, _objectSpread(_objectSpread({}, this.props), {}, {\n        onChange: function onChange(e) {\n          if (_this.props.onChange) {\n            _this.props.onChange(e.nativeEvent);\n          }\n        }\n      })) : _jsx(UnsupportedPlatform, {});\n    }\n  }]);\n\n  return RangeSlider;\n}(Component);\n\nexport { RangeSlider as default };\nRangeSlider.propTypes = {\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  selectedMinimum: PropTypes.number,\n  selectedMaximum: PropTypes.number\n};","map":{"version":3,"names":["React","Component","requireNativeComponent","PropTypes","UnsupportedPlatform","flex","justifyContent","alignItems","fontSize","fontWeight","MyRangeSlider","RangeSlider","Platform","OS","props","e","onChange","nativeEvent","propTypes","minValue","number","maxValue","selectedMinimum","selectedMaximum"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/node_modules/react-native-range-slider/index.js"],"sourcesContent":["//  Created by react-native-create-bridge\nimport React, { Component } from 'react';\nimport {\n  Text,\n  requireNativeComponent,\n  NativeModules,\n  Platform,\n  View,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst UnsupportedPlatform = () => (\n  <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n    <Text style={{ fontSize: 16, fontWeight: 'bold' }}>Android is not supported yet!</Text>\n  </View>\n);\nconst MyRangeSlider = requireNativeComponent('RangeSlider', RangeSlider);\n\nexport default class RangeSlider extends Component {\n  render () {\n    return Platform.OS === 'ios' ?\n      <MyRangeSlider\n        {...this.props}\n        onChange={(e) => {\n          if (this.props.onChange) {\n            this.props.onChange(e.nativeEvent);\n          }\n        }}\n      /> :\n      <UnsupportedPlatform />;\n  }\n}\n\nRangeSlider.propTypes = {\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  selectedMinimum: PropTypes.number,\n  selectedMaximum: PropTypes.number,\n};\n"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;SAGEC,sB;;;;AAKF,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;EAAA,OAC1B,KAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWC,cAAc,EAAE,QAA3B;MAAqCC,UAAU,EAAE;IAAjD,CAAb;IAAA,UACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAZ;QAAgBC,UAAU,EAAE;MAA5B,CAAb;MAAA;IAAA;EADF,EAD0B;AAAA,CAA5B;;AAKA,IAAMC,aAAa,GAAGR,sBAAsB,CAAC,aAAD,EAAgBS,WAAhB,CAA5C;;IAEqBA,W;;;;;;;;;;;;;WACnB,kBAAU;MAAA;;MACR,OAAOC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACL,KAAC,aAAD,kCACM,KAAKC,KADX;QAEE,QAAQ,EAAE,kBAACC,CAAD,EAAO;UACf,IAAI,KAAI,CAACD,KAAL,CAAWE,QAAf,EAAyB;YACvB,KAAI,CAACF,KAAL,CAAWE,QAAX,CAAoBD,CAAC,CAACE,WAAtB;UACD;QACF;MANH,GADK,GASL,KAAC,mBAAD,KATF;IAUD;;;;EAZsChB,S;;SAApBU,W;AAerBA,WAAW,CAACO,SAAZ,GAAwB;EACtBC,QAAQ,EAAEhB,SAAS,CAACiB,MADE;EAEtBC,QAAQ,EAAElB,SAAS,CAACiB,MAFE;EAGtBE,eAAe,EAAEnB,SAAS,CAACiB,MAHL;EAItBG,eAAe,EAAEpB,SAAS,CAACiB;AAJL,CAAxB"},"metadata":{},"sourceType":"module"}