{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport React from 'react';\nimport HomeScreen from \"./screens/home.screen\";\nimport AddPlant from \"./screens/addPlant.screen\";\nimport WaterReminder from \"./screens/waterRemind.screen\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport * as Notifications from 'expo-notifications';\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar registerForPushNotificationsAsync = function _callee() {\n  var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n        case 2:\n          _await$Notifications$ = _context.sent;\n          existingStatus = _await$Notifications$.status;\n          finalStatus = existingStatus;\n\n          if (!(existingStatus !== 'granted')) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n        case 8:\n          _await$Notifications$2 = _context.sent;\n          status = _await$Notifications$2.status;\n          finalStatus = status;\n\n        case 11:\n          if (!(finalStatus !== 'granted')) {\n            _context.next = 14;\n            break;\n          }\n\n          alert('Failed to get push token for push notification!');\n          return _context.abrupt(\"return\");\n\n        case 14:\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n        case 16:\n          token = _context.sent.data;\n          console.log({\n            token: token\n          });\n          return _context.abrupt(\"return\", token);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", {\n              shouldShowAlert: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nexport default function App() {\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n  }, []);\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        labeled: false,\n        barStyle: {\n          backgroundColor: '#009c97',\n          paddingVertical: 10\n        },\n        activeColor: \"white\",\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            unmountOnBlur: true,\n            tabBarIcon: function tabBarIcon() {\n              return _jsx(MaterialCommunityIcons, {\n                name: \"home-circle-outline\",\n                size: 28,\n                color: 'rgb(243,242,238)',\n                margin: 10\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"addPlant\",\n          component: AddPlant,\n          options: {\n            tabBarIcon: function tabBarIcon() {\n              return _jsx(MaterialCommunityIcons, {\n                name: \"plus-circle-outline\",\n                size: 32,\n                color: 'rgb(243,242,238)'\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"waterReminder\",\n          component: WaterReminder,\n          options: {\n            tabBarIcon: function tabBarIcon() {\n              return _jsx(MaterialCommunityIcons, {\n                name: \"water-outline\",\n                size: 32,\n                color: 'rgb(243,242,238)'\n              });\n            }\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"names":["React","HomeScreen","AddPlant","WaterReminder","createMaterialBottomTabNavigator","NavigationContainer","SafeAreaProvider","MaterialCommunityIcons","Notifications","useEffect","useState","Tab","registerForPushNotificationsAsync","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","token","data","console","log","setNotificationHandler","handleNotification","shouldShowAlert","App","backgroundColor","paddingVertical","unmountOnBlur","tabBarIcon","styles","StyleSheet","create","container","flex","justifyContent"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/App.js"],"sourcesContent":["import { StyleSheet, Text, View, ImageBackground } from 'react-native';\nimport React from 'react';\nimport HomeScreen from './screens/home.screen';\nimport AddPlant from './screens/addPlant.screen';\n// import FindPlant from './screens/find.screen';\nimport WaterReminder from './screens/waterRemind.screen';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as Notifications from 'expo-notifications';\nimport { useEffect, useState } from 'react';\n// import { registerForPushNotificationsAsync } from './utils/config';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst registerForPushNotificationsAsync = async function () {\n  let token;\n  const { status: existingStatus } = await Notifications.getPermissionsAsync();\n  let finalStatus = existingStatus;\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync();\n    finalStatus = status;\n  }\n  if (finalStatus !== 'granted') {\n    alert('Failed to get push token for push notification!');\n    return;\n  }\n  token = (await Notifications.getExpoPushTokenAsync()).data;\n  console.log({ token });\n  return token;\n};\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n  }),\n});\n\nexport default function App() {\n  useEffect(() => {\n    registerForPushNotificationsAsync();\n  }, []);\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Tab.Navigator\n          labeled={false}\n          barStyle={{ backgroundColor: '#009c97', paddingVertical: 10 }}\n          activeColor=\"white\"\n        >\n          <Tab.Screen\n            name=\"Home\"\n            component={HomeScreen}\n            options={{\n              unmountOnBlur: true,\n              tabBarIcon: () => {\n                return (\n                  <MaterialCommunityIcons\n                    name=\"home-circle-outline\"\n                    size={28}\n                    color={'rgb(243,242,238)'}\n                    margin={10}\n                  />\n                );\n              },\n            }}\n          />\n          <Tab.Screen\n            name=\"addPlant\"\n            component={AddPlant}\n            options={{\n              tabBarIcon: () => {\n                return (\n                  <MaterialCommunityIcons\n                    name=\"plus-circle-outline\"\n                    size={32}\n                    color={'rgb(243,242,238)'}\n                  />\n                );\n              },\n            }}\n          />\n          <Tab.Screen\n            name=\"waterReminder\"\n            component={WaterReminder}\n            options={{\n              tabBarIcon: () => {\n                return (\n                  <MaterialCommunityIcons\n                    name=\"water-outline\"\n                    size={32}\n                    color={'rgb(243,242,238)'}\n                  />\n                );\n              },\n            }}\n          />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '',\n    justifyContent: 'space-between',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}