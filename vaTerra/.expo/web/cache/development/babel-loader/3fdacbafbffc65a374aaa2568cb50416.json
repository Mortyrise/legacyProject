{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect } from 'react';\nimport Plant from \"./Plant\";\nimport { useState } from 'react';\nimport { getPlants, getUser } from \"../utils/service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Hibernacle = function Hibernacle(props) {\n  console.log('Hibernacle()');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      plants = _useState2[0],\n      setPlants = _useState2[1];\n\n  var getData = function _callee() {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUser(8));\n\n          case 3:\n            data = _context.sent;\n            setPlants(data.plantsArray);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsxs(View, {\n    style: styles.hibernacleContainer,\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.hibernacle,\n        children: \"User's Hibernacle\"\n      })\n    }), _jsx(View, {\n      style: {},\n      children: plants.map(function (element, index) {\n        return _jsx(Plant, {\n          plant: element\n        }, index);\n      })\n    })]\n  });\n};\n\nexport default Hibernacle;\nvar styles = StyleSheet.create({\n  hibernacle: {},\n  hibernacleContainer: {\n    flex: 1,\n    width: 385,\n    borderColor: 'blue',\n    borderWidth: 5\n  }\n});","map":{"version":3,"names":["React","useEffect","Plant","useState","getPlants","getUser","Hibernacle","props","console","log","plants","setPlants","getData","data","plantsArray","styles","hibernacleContainer","hibernacle","map","element","index","StyleSheet","create","flex","width","borderColor","borderWidth"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/Hibernacle.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Plant from './Plant';\nimport { useState } from 'react';\nimport { getPlants, getUser } from '../utils/service';\n\nconst Hibernacle = (props) => {\n  console.log('Hibernacle()');\n  const [plants, setPlants] = useState([]);\n\n  const getData = async () => {\n    try {\n      const data = await getUser(8);\n      setPlants(data.plantsArray);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    // console.log('fetching data');\n  }, []);\n\n  return (\n    <View style={styles.hibernacleContainer}>\n      <View>\n        <Text style={styles.hibernacle}>User's Hibernacle</Text>\n      </View>\n      <View\n        style={\n          {\n            // flex: 1,\n            // borderWidth: 1,\n            // borderColor: 'yellow',\n            // flexDirection: 'row',\n          }\n        }\n      >\n        {/* <Text>Hello World</Text>\n        <Text>{JSON.stringify(plants)}</Text> */}\n        {plants.map((element, index) => (\n          <Plant plant={element} key={index} />\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Hibernacle;\n\nconst styles = StyleSheet.create({\n  hibernacle: {\n    // marginTop: 50,\n    // fontSize: 24,\n    // color: 'green',\n    // flex: 1,\n  },\n  hibernacleContainer: {\n    flex: 1,\n    // height: 400,\n    width: 385,\n    // maxWidth: 200,\n    borderColor: 'blue',\n    borderWidth: 5,\n    // widht: 600,\n  },\n});\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;EAC5BC,OAAO,CAACC,GAAR,CAAY,cAAZ;;EACA,gBAA4BN,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOO,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,OAAO,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEOP,OAAO,CAAC,CAAD,CAFd;;UAAA;YAENQ,IAFM;YAGZF,SAAS,CAACE,IAAI,CAACC,WAAN,CAAT;YAHY;YAAA;;UAAA;YAAA;YAAA;YAKZN,OAAO,CAACC,GAAR;;UALY;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EASAR,SAAS,CAAC,YAAM;IACdW,OAAO;EAER,CAHQ,EAGN,EAHM,CAAT;EAKA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,mBAApB;IAAA,WACE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,UAApB;QAAA;MAAA;IADF,EADF,EAIE,KAAC,IAAD;MACE,KAAK,EACH,EAFJ;MAAA,UAYGP,MAAM,CAACQ,GAAP,CAAW,UAACC,OAAD,EAAUC,KAAV;QAAA,OACV,KAAC,KAAD;UAAO,KAAK,EAAED;QAAd,GAA4BC,KAA5B,CADU;MAAA,CAAX;IAZH,EAJF;EAAA,EADF;AAuBD,CAzCD;;AA2CA,eAAed,UAAf;AAEA,IAAMS,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BL,UAAU,EAAE,EADmB;EAO/BD,mBAAmB,EAAE;IACnBO,IAAI,EAAE,CADa;IAGnBC,KAAK,EAAE,GAHY;IAKnBC,WAAW,EAAE,MALM;IAMnBC,WAAW,EAAE;EANM;AAPU,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}