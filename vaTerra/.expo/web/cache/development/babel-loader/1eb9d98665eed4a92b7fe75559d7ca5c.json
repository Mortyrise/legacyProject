{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImagePicking from \"../components/ImagePicking\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AddPlant() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      nickNameText = _React$useState2[0],\n      onChangeNickNameText = _React$useState2[1];\n\n  var submitPlant = function submitPlant() {\n    var plantSchema = {};\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Add plant to your hibernacle\"\n    }), _jsx(TextInput, {\n      round: true,\n      placeholder: \"Optional plant's nickname\",\n      onChangeText: onChangeNickNameText,\n      value: nickNameText,\n      style: styles.input\n    }), _jsx(SearchBar, {}), _jsx(ImagePicking, {}), _jsx(Pressable, {\n      onPress: submitPlant,\n      style: styles.addplant,\n      children: _jsx(Text, {\n        children: \"ADD PLANT\"\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  imgButton: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 220,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10\n  },\n  plantImage: {\n    height: 213,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60\n  },\n  addplant: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 120,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  uploadimage: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default AddPlant;","map":{"version":3,"names":["React","useState","useEffect","ImagePicking","SearchBar","AddPlant","nickNameText","onChangeNickNameText","submitPlant","plantSchema","styles","container","input","addplant","StyleSheet","create","imgButton","borderWidth","backgroundColor","marginTop","borderRadius","width","height","justifyContent","alignItems","flex","searchBar","fontSize","margin","padding","plantImage","uploadimage"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/screens/addPlant.screen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  StyleSheet,\n  Image,\n  Button,\n} from 'react-native';\nimport ImagePicking from '../components/ImagePicking';\n// import * as ImagePicker from 'expo-image-picker';\nimport SearchBar from '../components/SearchBar';\n\n// const hasMediaLibraryPermissionGranted = async () => {\n//   let granted = false;\n//   const permission = await ImagePicker.requestMediaLibraryPermissionsAsync();\n//   if (!permission.canAskAgain || permission.status === 'denied') {\n//     granted = false;\n//   }\n//   if (permission.granted) {\n//     granted = true;\n//   }\n//   return granted;\n// };\n\nfunction AddPlant() {\n  const [nickNameText, onChangeNickNameText] = React.useState('');\n  // const [plantImgURL, setPlantImgURL] = React.useState(null);\n  // const [image, setImage] = useState(null);\n\n  const submitPlant = () => {\n    const plantSchema = {};\n  };\n\n  // const pickImage = async () => {\n  //   let imgURI = null;\n  //   const storagePermissionGranted = await hasMediaLibraryPermissionGranted();\n  //   if (!storagePermissionGranted) return imgURI;\n  //   let result = await ImagePicker.launchImageLibraryAsync({\n  //     mediaTypes: ImagePicker.MediaTypeOptions.Images,\n  //     allowsEditing: true,\n  //     aspect: [3, 4],\n  //     quality: 1,\n  //   });\n  //   if (!result.cancelled) {\n  //     imgURI = result.uri;\n  //   }\n  //   return imgURI;\n  // };\n\n  return (\n    <View style={styles.container}>\n      <Text>Add plant to your hibernacle</Text>\n      <TextInput\n        round\n        placeholder=\"Optional plant's nickname\"\n        onChangeText={onChangeNickNameText}\n        value={nickNameText}\n        style={styles.input}\n        // key={key.id}\n      ></TextInput>\n      <SearchBar\n      // key={key.id}\n      />\n      {/* <View style={styles.uploadimage}>\n        <Pressable\n          title=\"Pick an image from camera roll\"\n          onPress={pickImage}\n          style={styles.imgButton}\n        >\n          <Text>Add a photo from your gallery</Text>\n        </Pressable>\n        {image && <Image source={{ uri: image }} style={styles.plantImage} />}\n      </View> */}\n      <ImagePicking />\n      <Pressable onPress={submitPlant} style={styles.addplant}>\n        <Text>ADD PLANT</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  imgButton: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 220,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: { alignItems: 'center', justifyContent: 'center', flex: 1 },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n  },\n  plantImage: {\n    height: 213,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60,\n  },\n  addplant: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 120,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  uploadimage: { alignItems: 'center', justifyContent: 'center' },\n});\nexport default AddPlant;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAUA,OAAOC,YAAP;AAEA,OAAOC,SAAP;;;;AAcA,SAASC,QAAT,GAAoB;EAClB,sBAA6CL,KAAK,CAACC,QAAN,CAAe,EAAf,CAA7C;EAAA;EAAA,IAAOK,YAAP;EAAA,IAAqBC,oBAArB;;EAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxB,IAAMC,WAAW,GAAG,EAApB;EACD,CAFD;;EAoBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,SAAD;MACE,KAAK,MADP;MAEE,WAAW,EAAC,2BAFd;MAGE,YAAY,EAAEJ,oBAHhB;MAIE,KAAK,EAAED,YAJT;MAKE,KAAK,EAAEI,MAAM,CAACE;IALhB,EAFF,EAUE,KAAC,SAAD,KAVF,EAuBE,KAAC,YAAD,KAvBF,EAwBE,KAAC,SAAD;MAAW,OAAO,EAAEJ,WAApB;MAAiC,KAAK,EAAEE,MAAM,CAACG,QAA/C;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EAxBF;EAAA,EADF;AA8BD;;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,WAAW,EAAE,CADJ;IAETC,eAAe,EAAE,kBAFR;IAGTC,SAAS,EAAE,EAHF;IAITC,YAAY,EAAE,CAJL;IAKTC,KAAK,EAAE,GALE;IAMTC,MAAM,EAAE,EANC;IAOTC,cAAc,EAAE,QAPP;IAQTC,UAAU,EAAE;EARH,CADoB;EAW/Bb,SAAS,EAAE;IAAEa,UAAU,EAAE,QAAd;IAAwBD,cAAc,EAAE,QAAxC;IAAkDE,IAAI,EAAE;EAAxD,CAXoB;EAY/BC,SAAS,EAAE;IACTN,YAAY,EAAE,EADL;IAETE,MAAM,EAAE,EAFC;IAGTD,KAAK,EAAE,GAHE;IAITM,QAAQ,EAAE;EAJD,CAZoB;EAkB/Bf,KAAK,EAAE;IACLU,MAAM,EAAE,EADH;IAELM,MAAM,EAAE,EAFH;IAGLX,WAAW,EAAE,CAHR;IAILY,OAAO,EAAE,EAJJ;IAKLT,YAAY,EAAE;EALT,CAlBwB;EAyB/BU,UAAU,EAAE;IACVR,MAAM,EAAE,GADE;IAEVD,KAAK,EAAE,GAFG;IAGVJ,WAAW,EAAE,CAHH;IAIVY,OAAO,EAAE,CAJC;IAKVV,SAAS,EAAE,EALD;IAMVC,YAAY,EAAE;EANJ,CAzBmB;EAiC/BP,QAAQ,EAAE;IACRI,WAAW,EAAE,CADL;IAERC,eAAe,EAAE,kBAFT;IAGRC,SAAS,EAAE,EAHH;IAIRC,YAAY,EAAE,CAJN;IAKRC,KAAK,EAAE,GALC;IAMRC,MAAM,EAAE,EANA;IAORC,cAAc,EAAE,QAPR;IAQRC,UAAU,EAAE;EARJ,CAjCqB;EA2C/BO,WAAW,EAAE;IAAEP,UAAU,EAAE,QAAd;IAAwBD,cAAc,EAAE;EAAxC;AA3CkB,CAAlB,CAAf;AA6CA,eAAelB,QAAf"},"metadata":{},"sourceType":"module"}