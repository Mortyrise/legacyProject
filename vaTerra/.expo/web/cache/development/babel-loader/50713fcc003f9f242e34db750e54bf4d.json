{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AddPlant() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      nickNameText = _React$useState2[0],\n      onChangeNickNameText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      plantImgURL = _React$useState4[0],\n      setPlantImgURL = _React$useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Add plant to your hibernacle\"\n    }), _jsx(TextInput, {\n      round: true,\n      placeholder: \"Optional plant's nickname\",\n      onChangeText: onChangeNickNameText,\n      value: nickNameText,\n      style: styles.input\n    }), _jsx(SearchBar, {}, key.id), _jsx(Image, {\n      style: styles.plantImage,\n      source: {\n        uri: plantImgURL\n      }\n    }), _jsx(Pressable, {})]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10\n  },\n  plantImage: {\n    height: 160,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60\n  }\n});\nexport default AddPlant;","map":{"version":3,"names":["React","useState","useEffect","SearchBar","AddPlant","nickNameText","onChangeNickNameText","plantImgURL","setPlantImgURL","styles","container","input","key","id","plantImage","uri","StyleSheet","create","alignItems","justifyContent","flex","searchBar","borderRadius","height","width","fontSize","margin","borderWidth","padding","marginTop"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/screens/addPlant.screen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  StyleSheet,\n  Image,\n} from 'react-native';\nimport SearchBar from '../components/SearchBar';\n\nfunction AddPlant() {\n  const [nickNameText, onChangeNickNameText] = React.useState('');\n  const [plantImgURL, setPlantImgURL] = React.useState('');\n\n  return (\n    <View style={styles.container}>\n      <Text>Add plant to your hibernacle</Text>\n      <TextInput\n        round\n        placeholder=\"Optional plant's nickname\"\n        onChangeText={onChangeNickNameText}\n        value={nickNameText}\n        style={styles.input}\n        // key={key.id}\n      ></TextInput>\n      <SearchBar key={key.id} />\n      <Image\n        style={styles.plantImage}\n        source={{\n          uri: plantImgURL,\n        }}\n      />\n      <Pressable></Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { alignItems: 'center', justifyContent: 'center', flex: 1 },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n  },\n  plantImage: {\n    height: 160,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60,\n  },\n});\nexport default AddPlant;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,SAAP;;;;AAEA,SAASC,QAAT,GAAoB;EAClB,sBAA6CJ,KAAK,CAACC,QAAN,CAAe,EAAf,CAA7C;EAAA;EAAA,IAAOI,YAAP;EAAA,IAAqBC,oBAArB;;EACA,uBAAsCN,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;EAAA;EAAA,IAAOM,WAAP;EAAA,IAAoBC,cAApB;;EAEA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,SAAD;MACE,KAAK,MADP;MAEE,WAAW,EAAC,2BAFd;MAGE,YAAY,EAAEJ,oBAHhB;MAIE,KAAK,EAAED,YAJT;MAKE,KAAK,EAAEI,MAAM,CAACE;IALhB,EAFF,EAUE,KAAC,SAAD,MAAgBC,GAAG,CAACC,EAApB,CAVF,EAWE,KAAC,KAAD;MACE,KAAK,EAAEJ,MAAM,CAACK,UADhB;MAEE,MAAM,EAAE;QACNC,GAAG,EAAER;MADC;IAFV,EAXF,EAiBE,KAAC,SAAD,KAjBF;EAAA,EADF;AAqBD;;AAED,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IAAEQ,UAAU,EAAE,QAAd;IAAwBC,cAAc,EAAE,QAAxC;IAAkDC,IAAI,EAAE;EAAxD,CADoB;EAE/BC,SAAS,EAAE;IACTC,YAAY,EAAE,EADL;IAETC,MAAM,EAAE,EAFC;IAGTC,KAAK,EAAE,GAHE;IAITC,QAAQ,EAAE;EAJD,CAFoB;EAQ/Bd,KAAK,EAAE;IACLY,MAAM,EAAE,EADH;IAELG,MAAM,EAAE,EAFH;IAGLC,WAAW,EAAE,CAHR;IAILC,OAAO,EAAE,EAJJ;IAKLN,YAAY,EAAE;EALT,CARwB;EAe/BR,UAAU,EAAE;IACVS,MAAM,EAAE,GADE;IAEVC,KAAK,EAAE,GAFG;IAGVG,WAAW,EAAE,CAHH;IAIVC,OAAO,EAAE,CAJC;IAKVC,SAAS,EAAE,EALD;IAMVP,YAAY,EAAE;EANJ;AAfmB,CAAlB,CAAf;AAwBA,eAAelB,QAAf"},"metadata":{},"sourceType":"module"}