{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport SearchBar from \"../components/SearchBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AddPlant() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      nickNameText = _React$useState2[0],\n      onChangeNickNameText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      plantImgURL = _React$useState4[0],\n      setPlantImgURL = _React$useState4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var submitPlant = function submitPlant() {\n    var plantSchema = {};\n  };\n\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [3, 4],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Add plant to your hibernacle\"\n    }), _jsx(TextInput, {\n      round: true,\n      placeholder: \"Optional plant's nickname\",\n      onChangeText: onChangeNickNameText,\n      value: nickNameText,\n      style: styles.input\n    }), _jsx(SearchBar, {}), _jsxs(View, {\n      style: styles.uploadimage,\n      children: [_jsx(Pressable, {\n        title: \"Pick an image from camera roll\",\n        onPress: pickImage,\n        style: styles.imgButton,\n        children: _jsx(Text, {\n          children: \"Add a photo from your gallery\"\n        })\n      }), image && _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: styles.plantImage\n      })]\n    }), _jsx(Pressable, {\n      onPress: submitPlant,\n      style: styles.addplant,\n      children: _jsx(Text, {\n        children: \"ADD PLANT\"\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  imgButton: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 40\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10\n  },\n  plantImage: {\n    height: 160,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60\n  },\n  addplant: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 120,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  uploadimage: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default AddPlant;","map":{"version":3,"names":["React","useState","useEffect","ImagePicker","SearchBar","AddPlant","nickNameText","onChangeNickNameText","plantImgURL","setPlantImgURL","image","setImage","submitPlant","plantSchema","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","styles","container","input","uploadimage","imgButton","plantImage","addplant","StyleSheet","create","height","margin","borderWidth","padding","borderRadius","alignItems","justifyContent","flex","searchBar","width","fontSize","marginTop","backgroundColor"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/screens/addPlant.screen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  StyleSheet,\n  Image,\n  Button,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport SearchBar from '../components/SearchBar';\n\nfunction AddPlant() {\n  const [nickNameText, onChangeNickNameText] = React.useState('');\n  const [plantImgURL, setPlantImgURL] = React.useState(null);\n  const [image, setImage] = useState(null);\n\n  const submitPlant = () => {\n    const plantSchema = {};\n  };\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [3, 4],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n  return (\n    <View style={styles.container}>\n      <Text>Add plant to your hibernacle</Text>\n      <TextInput\n        round\n        placeholder=\"Optional plant's nickname\"\n        onChangeText={onChangeNickNameText}\n        value={nickNameText}\n        style={styles.input}\n        // key={key.id}\n      ></TextInput>\n      <SearchBar\n      // key={key.id}\n      />\n      <View style={styles.uploadimage}>\n        <Pressable\n          title=\"Pick an image from camera roll\"\n          onPress={pickImage}\n          style={styles.imgButton}\n        >\n          <Text>Add a photo from your gallery</Text>\n        </Pressable>\n        {image && <Image source={{ uri: image }} style={styles.plantImage} />}\n      </View>\n\n      <Pressable onPress={submitPlant} style={styles.addplant}>\n        <Text>ADD PLANT</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  imgButton: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 40,\n  },\n  container: { alignItems: 'center', justifyContent: 'center', flex: 1 },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n  },\n  plantImage: {\n    height: 160,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60,\n  },\n  addplant: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 120,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  uploadimage: { alignItems: 'center', justifyContent: 'center' },\n});\nexport default AddPlant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}