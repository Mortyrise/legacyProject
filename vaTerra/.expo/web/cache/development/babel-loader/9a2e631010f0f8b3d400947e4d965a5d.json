{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect } from 'react';\nimport Plant from \"./Plant\";\nimport { useState } from 'react';\nimport { getPlants, getUser } from \"../utils/service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Hibernacle = function Hibernacle(props) {\n  console.log('Hibernacle()');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      plants = _useState2[0],\n      setPlants = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var getData = function _callee() {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUser(8));\n\n          case 3:\n            data = _context.sent;\n            console.log(data);\n            setUser(data.name);\n            setPlants(data.plantsArray);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsx(View, {\n    style: styles.hibernacleContainer,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"HIBERNACLE\"\n        })\n      }), _jsx(View, {\n        style: styles.hibernacleWrapper,\n        children: plants.map(function (element, index) {\n          return _jsx(Plant, {\n            plant: element\n          }, index);\n        })\n      })]\n    })\n  });\n};\n\nexport default Hibernacle;\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 10,\n    fontSize: 23,\n    fontWeight: 'bold',\n    fontFamily: 'Roboto',\n    color: '#009c97',\n    letterSpacing: 8\n  },\n  hibernacleContainer: {\n    marginTop: 45,\n    flex: 1,\n    width: 395,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  hibernacleWrapper: {\n    flex: 1,\n    width: 360,\n    height: 600,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    borderRadius: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","Plant","useState","getPlants","getUser","Hibernacle","props","console","log","plants","setPlants","user","setUser","getData","data","name","plantsArray","styles","hibernacleContainer","text","hibernacleWrapper","map","element","index","StyleSheet","create","marginTop","fontSize","fontWeight","fontFamily","color","letterSpacing","flex","width","justifyContent","alignItems","height","flexDirection","flexWrap","borderRadius"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/Hibernacle.jsx"],"sourcesContent":["import { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Plant from './Plant';\nimport { useState } from 'react';\nimport { getPlants, getUser } from '../utils/service';\n\nconst Hibernacle = (props) => {\n  console.log('Hibernacle()');\n  const [plants, setPlants] = useState([]);\n  const [user, setUser] = useState(null);\n\n  const getData = async () => {\n    try {\n      const data = await getUser(8);\n      console.log(data);\n      setUser(data.name);\n      setPlants(data.plantsArray);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    // console.log('fetching data');\n  }, []);\n\n  return (\n    <View style={styles.hibernacleContainer}>\n      <ScrollView>\n        <View>\n          <Text style={styles.text}>HIBERNACLE</Text>\n        </View>\n        <View style={styles.hibernacleWrapper}>\n          {plants.map((element, index) => (\n            <Plant plant={element} key={index} />\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Hibernacle;\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 10,\n    fontSize: 23,\n    fontWeight: 'bold',\n    fontFamily: 'Roboto',\n    color: '#009c97',\n    letterSpacing: 8,\n  },\n  hibernacleContainer: {\n    marginTop: 45,\n    flex: 1,\n    width: 395,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hibernacleWrapper: {\n    flex: 1,\n    width: 360,\n    height: 600,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n\n    marginTop: 20,\n    borderRadius: 20,\n  },\n});\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;EAC5BC,OAAO,CAACC,GAAR,CAAY,cAAZ;;EACA,gBAA4BN,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOO,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAwBR,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOS,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,OAAO,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEOT,OAAO,CAAC,CAAD,CAFd;;UAAA;YAENU,IAFM;YAGZP,OAAO,CAACC,GAAR,CAAYM,IAAZ;YACAF,OAAO,CAACE,IAAI,CAACC,IAAN,CAAP;YACAL,SAAS,CAACI,IAAI,CAACE,WAAN,CAAT;YALY;YAAA;;UAAA;YAAA;YAAA;YAOZT,OAAO,CAACC,GAAR;;UAPY;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAWAR,SAAS,CAAC,YAAM;IACda,OAAO;EAER,CAHQ,EAGN,EAHM,CAAT;EAKA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEI,MAAM,CAACC,mBAApB;IAAA,UACE,MAAC,UAAD;MAAA,WACE,KAAC,IAAD;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAED,MAAM,CAACE,IAApB;UAAA;QAAA;MADF,EADF,EAIE,KAAC,IAAD;QAAM,KAAK,EAAEF,MAAM,CAACG,iBAApB;QAAA,UACGX,MAAM,CAACY,GAAP,CAAW,UAACC,OAAD,EAAUC,KAAV;UAAA,OACV,KAAC,KAAD;YAAO,KAAK,EAAED;UAAd,GAA4BC,KAA5B,CADU;QAAA,CAAX;MADH,EAJF;IAAA;EADF,EADF;AAcD,CAnCD;;AAqCA,eAAelB,UAAf;AAEA,IAAMY,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BN,IAAI,EAAE;IACJO,SAAS,EAAE,EADP;IAEJC,QAAQ,EAAE,EAFN;IAGJC,UAAU,EAAE,MAHR;IAIJC,UAAU,EAAE,QAJR;IAKJC,KAAK,EAAE,SALH;IAMJC,aAAa,EAAE;EANX,CADyB;EAS/Bb,mBAAmB,EAAE;IACnBQ,SAAS,EAAE,EADQ;IAEnBM,IAAI,EAAE,CAFa;IAGnBC,KAAK,EAAE,GAHY;IAInBC,cAAc,EAAE,QAJG;IAKnBC,UAAU,EAAE;EALO,CATU;EAgB/Bf,iBAAiB,EAAE;IACjBY,IAAI,EAAE,CADW;IAEjBC,KAAK,EAAE,GAFU;IAGjBG,MAAM,EAAE,GAHS;IAIjBC,aAAa,EAAE,KAJE;IAKjBC,QAAQ,EAAE,MALO;IAMjBH,UAAU,EAAE,YANK;IAOjBD,cAAc,EAAE,cAPC;IASjBR,SAAS,EAAE,EATM;IAUjBa,YAAY,EAAE;EAVG;AAhBY,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}