{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseUrl = 'https://85a2-45-130-134-153.eu.ngrok.io/';\nexport var getPlants = function _callee() {\n  var result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseUrl + 'plants'));\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(result.json());\n\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var getUser = function _callee2(id) {\n  var result;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseUrl + 'user/' + id));\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(result.json());\n\n        case 6:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var addUser = function _callee3(user) {\n  var data;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseUrl + 'user', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify(user)\n          }));\n\n        case 3:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", data.json());\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var removeUser = function _callee4(user) {\n  var res;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseUrl + (\"user/\" + user.userId), {\n            method: 'DELETE'\n          }));\n\n        case 3:\n          res = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var addPlantToUser = function _callee5(plantObject) {\n  var plant;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseUrl + 'user/plant', {\n            method: 'PUT',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify(plantObject)\n          }));\n\n        case 3:\n          plant = _context5.sent;\n          return _context5.abrupt(\"return\", plant.json());\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};","map":{"version":3,"names":["baseUrl","getPlants","fetch","result","json","console","log","getUser","id","addUser","user","method","headers","body","JSON","stringify","data","removeUser","userId","res","addPlantToUser","plantObject","plant"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/utils/service.js"],"sourcesContent":["const baseUrl = 'https://85a2-45-130-134-153.eu.ngrok.io/';\n\n//Get user plants\nexport const getPlants = async () => {\n  try {\n    const result = await fetch(baseUrl + 'plants');\n    return await result.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Get user\nexport const getUser = async (id) => {\n  try {\n    const result = await fetch(baseUrl + 'user/' + id);\n    return await result.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Post user\nexport const addUser = async (user) => {\n  try {\n    const data = await fetch(baseUrl + 'user', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    });\n    return data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Delete user\nexport const removeUser = async (user) => {\n  try {\n    const res = await fetch(baseUrl + `user/${user.userId}`, {\n      method: 'DELETE',\n    });\n    return await res.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Add Plant to the users plantsArray, \"Put\"\nexport const addPlantToUser = async (plantObject) => {\n  try {\n    const plant = await fetch(baseUrl + 'user/plant', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(plantObject),\n    });\n    return plant.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":";AAAA,IAAMA,OAAO,GAAG,0CAAhB;AAGA,OAAO,IAAMC,SAAS,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEAC,KAAK,CAACF,OAAO,GAAG,QAAX,CAFL;;QAAA;UAEfG,MAFe;UAAA;UAAA,iCAGRA,MAAM,CAACC,IAAP,EAHQ;;QAAA;UAAA;;QAAA;UAAA;UAAA;UAKrBC,OAAO,CAACC,GAAR;;QALqB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAlB;AAUP,OAAO,IAAMC,OAAO,GAAG,kBAAOC,EAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEEN,KAAK,CAACF,OAAO,GAAG,OAAV,GAAoBQ,EAArB,CAFP;;QAAA;UAEbL,MAFa;UAAA;UAAA,iCAGNA,MAAM,CAACC,IAAP,EAHM;;QAAA;UAAA;;QAAA;UAAA;UAAA;UAKnBC,OAAO,CAACC,GAAR;;QALmB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAhB;AAUP,OAAO,IAAMG,OAAO,GAAG,kBAAOC,IAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEAR,KAAK,CAACF,OAAO,GAAG,MAAX,EAAmB;YACzCW,MAAM,EAAE,MADiC;YAEzCC,OAAO,EAAE;cACP,gBAAgB;YADT,CAFgC;YAKzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;UALmC,CAAnB,CAFL;;QAAA;UAEbM,IAFa;UAAA,kCASZA,IAAI,CAACZ,IAAL,EATY;;QAAA;UAAA;UAAA;UAWnBC,OAAO,CAACC,GAAR;;QAXmB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAhB;AAgBP,OAAO,IAAMW,UAAU,GAAG,kBAAOP,IAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEJR,KAAK,CAACF,OAAO,cAAWU,IAAI,CAACQ,MAAhB,CAAR,EAAkC;YACvDP,MAAM,EAAE;UAD+C,CAAlC,CAFD;;QAAA;UAEhBQ,GAFgB;UAAA;UAAA,iCAKTA,GAAG,CAACf,IAAJ,EALS;;QAAA;UAAA;;QAAA;UAAA;UAAA;UAOtBC,OAAO,CAACC,GAAR;;QAPsB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAnB;AAYP,OAAO,IAAMc,cAAc,GAAG,kBAAOC,WAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAENnB,KAAK,CAACF,OAAO,GAAG,YAAX,EAAyB;YAChDW,MAAM,EAAE,KADwC;YAEhDC,OAAO,EAAE;cACP,gBAAgB;YADT,CAFuC;YAKhDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,WAAf;UAL0C,CAAzB,CAFC;;QAAA;UAEpBC,KAFoB;UAAA,kCASnBA,KAAK,CAAClB,IAAN,EATmB;;QAAA;UAAA;UAAA;UAW1BC,OAAO,CAACC,GAAR;;QAX0B;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAvB"},"metadata":{},"sourceType":"module"}