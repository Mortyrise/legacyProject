{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SearchBar } from 'react-native-elements';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Addplant = function Addplant() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  var options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'a50b20c281mshf7c1bd2fb7ea52dp19fb71jsnf8aba98da76e',\n      'X-RapidAPI-Host': 'house-plants.p.rapidapi.com'\n    }\n  };\n  useEffect(function () {\n    fetch('actual api').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n      setMasterDataSource(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return _jsxs(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      children: [item.id, '.', item.title.toUpperCase()]\n    });\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8'\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return _jsxs(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      children: \"Add plant to your hibernacle\"\n    }), _jsx(SearchBar, {\n      round: true,\n      searchIcon: {\n        size: 24\n      },\n      onChangeText: function onChangeText(text) {\n        return searchFilterFunction(text);\n      },\n      onClear: function onClear(text) {\n        return searchFilterFunction('');\n      },\n      placeholder: \"Type Here...\",\n      value: search\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useEffect","SearchBar","Addplant","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","options","method","headers","fetch","then","response","json","responseJson","catch","error","console","searchFilterFunction","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","ItemSeparatorView","height","width","backgroundColor","alert","alignItems","justifyContent","flex","size"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/screens/addPlant.screen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\n\nexport const Addplant = () => {\n  const [search, setSearch] = useState('');\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [masterDataSource, setMasterDataSource] = useState([]);\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'a50b20c281mshf7c1bd2fb7ea52dp19fb71jsnf8aba98da76e',\n      'X-RapidAPI-Host': 'house-plants.p.rapidapi.com',\n    },\n  };\n\n  useEffect(() => {\n    fetch('actual api')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setFilteredDataSource(responseJson);\n        setMasterDataSource(responseJson);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  const searchFilterFunction = (text) => {\n    if (text) {\n      const newData = masterDataSource.filter(function (item) {\n        const itemData = item.title\n          ? item.title.toUpperCase()\n          : ''.toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n  const ItemView = ({ item }) => {\n    return (\n      // Flat List Item\n      <Text style={styles.itemStyle} onPress={() => getItem(item)}>\n        {item.id}\n        {'.'}\n        {item.title.toUpperCase()}\n      </Text>\n    );\n  };\n\n  const ItemSeparatorView = () => {\n    return (\n      // Flat List Item Separator\n      <View\n        style={{\n          height: 0.5,\n          width: '100%',\n          backgroundColor: '#C8C8C8',\n        }}\n      />\n    );\n  };\n\n  const getItem = (item) => {\n    // Function for click on an item\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return (\n    <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n      <Text>Add plant to your hibernacle</Text>\n      <SearchBar\n        round\n        searchIcon={{ size: 24 }}\n        onChangeText={(text) => searchFilterFunction(text)}\n        onClear={(text) => searchFilterFunction('')}\n        placeholder=\"Type Here...\"\n        value={search}\n      />\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}