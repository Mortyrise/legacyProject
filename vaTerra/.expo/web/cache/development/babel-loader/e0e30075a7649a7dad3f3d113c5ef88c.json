{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Slider from '@react-native-community/slider';\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { updateReminder } from \"../utils/service\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar IntervalSliders = function IntervalSliders(_ref) {\n  var plant = _ref.plant;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      waterInterval = _useState2[0],\n      setWaterInterval = _useState2[1];\n\n  var handleValueChange = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            updateReminder({\n              _id: '62a21daf09bc8c794d8b02b3',\n              id: '8'\n            }, plant, waterInterval);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: {\n      paddingTop: 10,\n      marginTop: 30\n    },\n    children: _jsxs(View, {\n      style: styles.slidersContainer,\n      children: [_jsxs(Text, {\n        style: styles.text,\n        children: [\" \", plant.nickName]\n      }), _jsx(Slider, {\n        style: {\n          width: 300,\n          height: 40\n        },\n        minimumValue: 1,\n        maximumValue: 15,\n        minimumTrackTintColor: '#009c97',\n        onValueChange: function onValueChange(value) {\n          setWaterInterval(Math.floor(value));\n          handleValueChange();\n          console.log(Math.floor(value));\n        },\n        thumbTintColor: '#009c97',\n        value: plant.wateringReminderInterval\n      }), _jsx(Text, {\n        style: styles.text,\n        children: waterInterval ? waterInterval : plant.wateringReminderInterval\n      })]\n    })\n  });\n};\n\nexport default IntervalSliders;\nvar styles = StyleSheet.create({\n  slidersContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontFamily: 'Roboto',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.2\n  }\n});","map":{"version":3,"names":["Slider","React","useState","useEffect","updateReminder","IntervalSliders","plant","waterInterval","setWaterInterval","handleValueChange","_id","id","paddingTop","marginTop","styles","slidersContainer","text","nickName","width","height","value","Math","floor","console","log","wateringReminderInterval","StyleSheet","create","justifyContent","alignItems","fontFamily","fontSize","fontWeight","letterSpacing"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/components/IntervalSliders.jsx"],"sourcesContent":["import Slider from '@react-native-community/slider';\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Alert } from 'react-native';\nimport { updateReminder } from '../utils/service';\n\nconst IntervalSliders = ({ plant }) => {\n  const [waterInterval, setWaterInterval] = useState(null);\n\n  const handleValueChange = async function () {\n    updateReminder(\n      { _id: '62a21daf09bc8c794d8b02b3', id: '8' },\n      plant,\n      waterInterval\n    );\n  };\n\n  return (\n    <View style={{ paddingTop: 10, marginTop: 30 }}>\n      <View style={styles.slidersContainer}>\n        <Text style={styles.text}> {plant.nickName}</Text>\n        <Slider\n          style={{ width: 300, height: 40 }}\n          minimumValue={1}\n          maximumValue={15}\n          minimumTrackTintColor={'#009c97'}\n          onValueChange={(value) => {\n            setWaterInterval(Math.floor(value));\n            handleValueChange();\n            console.log(Math.floor(value));\n            //put request);\n          }}\n          thumbTintColor={'#009c97'}\n          value={plant.wateringReminderInterval}\n        />\n        <Text style={styles.text}>\n          {waterInterval ? waterInterval : plant.wateringReminderInterval}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport default IntervalSliders;\n\nconst styles = StyleSheet.create({\n  slidersContainer: { justifyContent: 'center', alignItems: 'center' },\n  text: {\n    fontFamily: 'Roboto',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.2,\n  },\n});\n"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAe;EAAA,IAAZC,KAAY,QAAZA,KAAY;;EACrC,gBAA0CJ,QAAQ,CAAC,IAAD,CAAlD;EAAA;EAAA,IAAOK,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,IAAMC,iBAAiB,GAAG;IAAA;MAAA;QAAA;UAAA;YACxBL,cAAc,CACZ;cAAEM,GAAG,EAAE,0BAAP;cAAmCC,EAAE,EAAE;YAAvC,CADY,EAEZL,KAFY,EAGZC,aAHY,CAAd;;UADwB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA1B;;EAQA,OACE,KAAC,IAAD;IAAM,KAAK,EAAE;MAAEK,UAAU,EAAE,EAAd;MAAkBC,SAAS,EAAE;IAA7B,CAAb;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,gBAApB;MAAA,WACE,MAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,IAApB;QAAA,gBAA4BV,KAAK,CAACW,QAAlC;MAAA,EADF,EAEE,KAAC,MAAD;QACE,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAT;UAAcC,MAAM,EAAE;QAAtB,CADT;QAEE,YAAY,EAAE,CAFhB;QAGE,YAAY,EAAE,EAHhB;QAIE,qBAAqB,EAAE,SAJzB;QAKE,aAAa,EAAE,uBAACC,KAAD,EAAW;UACxBZ,gBAAgB,CAACa,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAD,CAAhB;UACAX,iBAAiB;UACjBc,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAZ;QAED,CAVH;QAWE,cAAc,EAAE,SAXlB;QAYE,KAAK,EAAEd,KAAK,CAACmB;MAZf,EAFF,EAgBE,KAAC,IAAD;QAAM,KAAK,EAAEX,MAAM,CAACE,IAApB;QAAA,UACGT,aAAa,GAAGA,aAAH,GAAmBD,KAAK,CAACmB;MADzC,EAhBF;IAAA;EADF,EADF;AAwBD,CAnCD;;AAqCA,eAAepB,eAAf;AAEA,IAAMS,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC/BZ,gBAAgB,EAAE;IAAEa,cAAc,EAAE,QAAlB;IAA4BC,UAAU,EAAE;EAAxC,CADa;EAE/Bb,IAAI,EAAE;IACJc,UAAU,EAAE,QADR;IAEJC,QAAQ,EAAE,EAFN;IAGJC,UAAU,EAAE,KAHR;IAIJC,aAAa,EAAE;EAJX;AAFyB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}