{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAwm4JhUIKnJeO4qOjXJbzRKFiLEXH1d58',\n  authDomain: 'vaterra-22740.firebaseapp.com',\n  projectId: 'vaterra-22740',\n  storageBucket: 'vaterra-22740.appspot.com',\n  messagingSenderId: '901541040609',\n  appId: '1:901541040609:web:c46076836268d4da9082a0'\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar registerForPushNotificationsAsync = function _callee() {\n  var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n        case 2:\n          _await$Notifications$ = _context.sent;\n          existingStatus = _await$Notifications$.status;\n          finalStatus = existingStatus;\n\n          if (!(existingStatus !== 'granted')) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n        case 8:\n          _await$Notifications$2 = _context.sent;\n          status = _await$Notifications$2.status;\n          finalStatus = status;\n\n        case 11:\n          if (!(finalStatus !== 'granted')) {\n            _context.next = 14;\n            break;\n          }\n\n          alert('Failed to get push token for push notification!');\n          return _context.abrupt(\"return\");\n\n        case 14:\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n        case 16:\n          token = _context.sent.data;\n          console.log({\n            token: token\n          });\n          return _context.abrupt(\"return\", token);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { firebase, registerForPushNotificationsAsync };","map":{"version":3,"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","registerForPushNotificationsAsync","Notifications","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","token","data","console","log"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/utils/config.js"],"sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAwm4JhUIKnJeO4qOjXJbzRKFiLEXH1d58',\n  authDomain: 'vaterra-22740.firebaseapp.com',\n  projectId: 'vaterra-22740',\n  storageBucket: 'vaterra-22740.appspot.com',\n  messagingSenderId: '901541040609',\n  appId: '1:901541040609:web:c46076836268d4da9082a0',\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst registerForPushNotificationsAsync = async function () {\n  let token;\n  const { status: existingStatus } = await Notifications.getPermissionsAsync();\n  let finalStatus = existingStatus;\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync();\n    finalStatus = status;\n  }\n  if (finalStatus !== 'granted') {\n    alert('Failed to get push token for push notification!');\n    return;\n  }\n  token = (await Notifications.getExpoPushTokenAsync()).data;\n  console.log({ token });\n  return token;\n};\n\nexport { firebase, registerForPushNotificationsAsync };\n"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,+BAFS;EAGrBC,SAAS,EAAE,eAHU;EAIrBC,aAAa,EAAE,2BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB;;AAQA,IAAI,CAACP,QAAQ,CAACQ,IAAT,CAAcC,MAAnB,EAA2B;EACzBT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACD;;AAED,IAAMU,iCAAiC,GAAG;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCAECC,aAAa,CAACC,mBAAd,EAFD;;QAAA;UAAA;UAExBC,cAFwB,yBAEhCC,MAFgC;UAGpCC,WAHoC,GAGtBF,cAHsB;;UAAA,MAIpCA,cAAc,KAAK,SAJiB;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAKbF,aAAa,CAACK,uBAAd,EALa;;QAAA;UAAA;UAK9BF,MAL8B,0BAK9BA,MAL8B;UAMtCC,WAAW,GAAGD,MAAd;;QANsC;UAAA,MAQpCC,WAAW,KAAK,SARoB;YAAA;YAAA;UAAA;;UAStCE,KAAK,CAAC,iDAAD,CAAL;UATsC;;QAAA;UAAA;UAAA,iCAYzBN,aAAa,CAACO,qBAAd,EAZyB;;QAAA;UAYxCC,KAZwC,iBAYcC,IAZd;UAaxCC,OAAO,CAACC,GAAR,CAAY;YAAEH,KAAK,EAALA;UAAF,CAAZ;UAbwC,iCAcjCA,KAdiC;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA1C;;AAiBA,SAASpB,QAAT,EAAmBW,iCAAnB"},"metadata":{},"sourceType":"module"}