{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport IntervalSliders from \"../components/IntervalSliders\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction WaterRemind() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      plants = _useState2[0],\n      setPlants = _useState2[1];\n\n  var getData = function _callee() {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUser(8));\n\n          case 3:\n            data = _context.sent;\n            console.log(data);\n            setPlants(data.plantsArray);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1\n      },\n      children: _jsx(Text, {\n        children: \"Water reminder page\"\n      })\n    }), _jsx(View, {\n      children: plants.map(function (element, index) {\n        return _jsx(IntervalSliders, {\n          plant: element\n        }, index);\n      })\n    })]\n  });\n}\n\nexport default WaterRemind;","map":{"version":3,"names":["React","useEffect","useState","IntervalSliders","WaterRemind","plants","setPlants","getData","getUser","data","console","log","plantsArray","alignItems","justifyContent","flex","map","element","index"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/screens/waterRemind.screen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text } from 'react-native';\nimport IntervalSliders from '../components/IntervalSliders';\n\nfunction WaterRemind() {\n  const [plants, setPlants] = useState([]);\n\n  const getData = async () => {\n    try {\n      const data = await getUser(8);\n      console.log(data);\n      setPlants(data.plantsArray);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    // console.log('fetching data');\n  }, []);\n  return (\n    <View>\n      <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n        <Text>Water reminder page</Text>\n      </View>\n      <View>\n        {/* <Text>Hello World</Text>\n        <Text>{JSON.stringify(plants)}</Text> */}\n        {plants.map((element, index) => (\n          <IntervalSliders plant={element} key={index} />\n        ))}\n      </View>\n    </View>\n  );\n}\nexport default WaterRemind;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,OAAOC,eAAP;;;;AAEA,SAASC,WAAT,GAAuB;EACrB,gBAA4BF,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOG,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,OAAO,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEOC,OAAO,CAAC,CAAD,CAFd;;UAAA;YAENC,IAFM;YAGZC,OAAO,CAACC,GAAR,CAAYF,IAAZ;YACAH,SAAS,CAACG,IAAI,CAACG,WAAN,CAAT;YAJY;YAAA;;UAAA;YAAA;YAAA;YAMZF,OAAO,CAACC,GAAR;;UANY;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAUAV,SAAS,CAAC,YAAM;IACdM,OAAO;EAER,CAHQ,EAGN,EAHM,CAAT;EAIA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEM,UAAU,EAAE,QAAd;QAAwBC,cAAc,EAAE,QAAxC;QAAkDC,IAAI,EAAE;MAAxD,CAAb;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EADF,EAIE,KAAC,IAAD;MAAA,UAGGV,MAAM,CAACW,GAAP,CAAW,UAACC,OAAD,EAAUC,KAAV;QAAA,OACV,KAAC,eAAD;UAAiB,KAAK,EAAED;QAAxB,GAAsCC,KAAtC,CADU;MAAA,CAAX;IAHH,EAJF;EAAA,EADF;AAcD;;AACD,eAAed,WAAf"},"metadata":{},"sourceType":"module"}