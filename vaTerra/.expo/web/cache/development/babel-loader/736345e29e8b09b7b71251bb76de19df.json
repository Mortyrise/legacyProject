{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport React from 'react';\nimport HomeScreen from \"./screens/home.screen\";\nimport AddPlant from \"./screens/addPlant.screen\";\nimport WaterReminder from \"./screens/waterRemind.screen\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport * as Notifications from 'expo-notifications';\nimport { useEffect, useState } from 'react';\nimport { registerForPushNotificationsAsync } from \"./utils/config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialBottomTabNavigator();\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nexport default function App() {\n  var _useState = useState(5),\n      _useState2 = _slicedToArray(_useState, 2),\n      waterReminder = _useState2[0],\n      setWaterReminder = _useState2[1];\n\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n  }, []);\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        labeled: false,\n        barStyle: {\n          backgroundColor: 'rgb(151,179,128)'\n        },\n        activeColor: \"white\",\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            tabBarIcon: function tabBarIcon() {\n              return _jsx(MaterialCommunityIcons, {\n                name: \"home-circle-outline\",\n                size: 32\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"addPlant\",\n          component: _jsx(AddPlant, {\n            waterReminder: waterReminder\n          }),\n          children: setWaterReminder,\n          options: {\n            tabBarIcon: function tabBarIcon() {\n              return _jsx(MaterialCommunityIcons, {\n                name: \"plus-circle-outline\",\n                size: 32\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"waterReminder\",\n          component: WaterReminder,\n          options: {\n            tabBarIcon: function tabBarIcon() {\n              return _jsx(MaterialCommunityIcons, {\n                name: \"water-outline\",\n                size: 32\n              });\n            }\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'beige',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"names":["React","HomeScreen","AddPlant","WaterReminder","createMaterialBottomTabNavigator","NavigationContainer","SafeAreaProvider","MaterialCommunityIcons","Notifications","useEffect","useState","registerForPushNotificationsAsync","Tab","setNotificationHandler","handleNotification","shouldShowAlert","App","waterReminder","setWaterReminder","backgroundColor","tabBarIcon","styles","StyleSheet","create","container","flex","justifyContent"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/App.js"],"sourcesContent":["import { StyleSheet, Text, View, ImageBackground } from 'react-native';\nimport React from 'react';\nimport HomeScreen from './screens/home.screen';\nimport AddPlant from './screens/addPlant.screen';\n// import FindPlant from './screens/find.screen';\nimport WaterReminder from './screens/waterRemind.screen';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as Notifications from 'expo-notifications';\nimport { useEffect, useState } from 'react';\nimport { registerForPushNotificationsAsync } from './utils/config';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n  }),\n});\n\nexport default function App() {\n  // const props = {\n  //   waterReminder: 5,\n  // };\n  const [waterReminder, setWaterReminder] = useState(5);\n  useEffect(() => {\n    registerForPushNotificationsAsync();\n  }, []);\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Tab.Navigator\n          labeled={false}\n          barStyle={{ backgroundColor: 'rgb(151,179,128)' }}\n          activeColor=\"white\"\n        >\n          <Tab.Screen\n            name=\"Home\"\n            component={HomeScreen}\n            options={{\n              tabBarIcon: () => {\n                return (\n                  <MaterialCommunityIcons\n                    name=\"home-circle-outline\"\n                    size={32}\n                  />\n                );\n              },\n            }}\n          />\n          <Tab.Screen\n            name=\"addPlant\"\n            component={<AddPlant waterReminder={waterReminder} />}\n            children={setWaterReminder}\n            // waterReminder={waterReminder}\n            // props={props}\n            // setWaterReminder={setWaterReminder}\n            options={{\n              tabBarIcon: () => {\n                return (\n                  <MaterialCommunityIcons\n                    name=\"plus-circle-outline\"\n                    size={32}\n                  />\n                );\n              },\n            }}\n          />\n\n          {/* <Tab.Screen\n            name=\"find\"\n            component={FindPlant}\n            options={{\n              tabBarIcon: () => {\n                return <MaterialCommunityIcons name=\"magnify\" size={32} />;\n              },\n            }}\n          /> */}\n          <Tab.Screen\n            name=\"waterReminder\"\n            component={WaterReminder}\n            options={{\n              tabBarIcon: () => {\n                return (\n                  <MaterialCommunityIcons name=\"water-outline\" size={32} />\n                );\n              },\n            }}\n          />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'beige',\n    justifyContent: 'space-between',\n  },\n});\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AAEA,OAAOC,aAAP;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,sBAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iCAAT;;;AAEA,IAAMC,GAAG,GAAGR,gCAAgC,EAA5C;AAEAI,aAAa,CAACK,sBAAd,CAAqC;EACnCC,kBAAkB,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA,iCAAa;cAC/BC,eAAe,EAAE;YADc,CAAb;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AADe,CAArC;AAMA,eAAe,SAASC,GAAT,GAAe;EAI5B,gBAA0CN,QAAQ,CAAC,CAAD,CAAlD;EAAA;EAAA,IAAOO,aAAP;EAAA,IAAsBC,gBAAtB;;EACAT,SAAS,CAAC,YAAM;IACdE,iCAAiC;EAClC,CAFQ,EAEN,EAFM,CAAT;EAGA,OACE,KAAC,gBAAD;IAAA,UACE,KAAC,mBAAD;MAAA,UACE,MAAC,GAAD,CAAK,SAAL;QACE,OAAO,EAAE,KADX;QAEE,QAAQ,EAAE;UAAEQ,eAAe,EAAE;QAAnB,CAFZ;QAGE,WAAW,EAAC,OAHd;QAAA,WAKE,KAAC,GAAD,CAAK,MAAL;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAElB,UAFb;UAGE,OAAO,EAAE;YACPmB,UAAU,EAAE,sBAAM;cAChB,OACE,KAAC,sBAAD;gBACE,IAAI,EAAC,qBADP;gBAEE,IAAI,EAAE;cAFR,EADF;YAMD;UARM;QAHX,EALF,EAmBE,KAAC,GAAD,CAAK,MAAL;UACE,IAAI,EAAC,UADP;UAEE,SAAS,EAAE,KAAC,QAAD;YAAU,aAAa,EAAEH;UAAzB,EAFb;UAGE,QAAQ,EAAEC,gBAHZ;UAOE,OAAO,EAAE;YACPE,UAAU,EAAE,sBAAM;cAChB,OACE,KAAC,sBAAD;gBACE,IAAI,EAAC,qBADP;gBAEE,IAAI,EAAE;cAFR,EADF;YAMD;UARM;QAPX,EAnBF,EA+CE,KAAC,GAAD,CAAK,MAAL;UACE,IAAI,EAAC,eADP;UAEE,SAAS,EAAEjB,aAFb;UAGE,OAAO,EAAE;YACPiB,UAAU,EAAE,sBAAM;cAChB,OACE,KAAC,sBAAD;gBAAwB,IAAI,EAAC,eAA7B;gBAA6C,IAAI,EAAE;cAAnD,EADF;YAGD;UALM;QAHX,EA/CF;MAAA;IADF;EADF,EADF;AAiED;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETN,eAAe,EAAE,OAFR;IAGTO,cAAc,EAAE;EAHP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}