{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport SearchBar from \"../components/SearchBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AddPlant() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      nickNameText = _React$useState2[0],\n      onChangeNickNameText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      plantImgURL = _React$useState4[0],\n      setPlantImgURL = _React$useState4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var submitPlant = function submitPlant() {\n    var plantSchema = {};\n  };\n\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Add plant to your hibernacle\"\n    }), _jsx(TextInput, {\n      round: true,\n      placeholder: \"Optional plant's nickname\",\n      onChangeText: onChangeNickNameText,\n      value: nickNameText,\n      style: styles.input\n    }), _jsx(SearchBar, {}), _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [_jsx(Button, {\n        title: \"Pick an image from camera roll\",\n        onPress: pickImage\n      }), image && _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      })]\n    }), plantImgURL ? _jsx(Image, {\n      style: styles.plantImage,\n      source: {\n        uri: plantImgURL\n      }\n    }) : _jsx(Text, {\n      children: \" No Image added\"\n    }), _jsx(Pressable, {\n      onPress: submitPlant,\n      style: styles.addplant,\n      children: _jsx(Text, {\n        children: \"ADD PLANT\"\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10\n  },\n  plantImage: {\n    height: 160,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60\n  },\n  addplant: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 120,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AddPlant;","map":{"version":3,"names":["React","useState","useEffect","ImagePicker","SearchBar","AddPlant","nickNameText","onChangeNickNameText","plantImgURL","setPlantImgURL","image","setImage","submitPlant","plantSchema","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","styles","container","input","flex","alignItems","justifyContent","width","height","plantImage","addplant","StyleSheet","create","searchBar","borderRadius","fontSize","margin","borderWidth","padding","marginTop","backgroundColor"],"sources":["/home/joanmarc/Escriptori/coding/soloProject/vaTerra-plant-project/vaTerra/screens/addPlant.screen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  StyleSheet,\n  Image,\n  Button,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport SearchBar from '../components/SearchBar';\n\nfunction AddPlant() {\n  const [nickNameText, onChangeNickNameText] = React.useState('');\n  const [plantImgURL, setPlantImgURL] = React.useState(null);\n  const [image, setImage] = useState(null);\n\n  const submitPlant = () => {\n    const plantSchema = {};\n  };\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n  return (\n    <View style={styles.container}>\n      <Text>Add plant to your hibernacle</Text>\n      <TextInput\n        round\n        placeholder=\"Optional plant's nickname\"\n        onChangeText={onChangeNickNameText}\n        value={nickNameText}\n        style={styles.input}\n        // key={key.id}\n      ></TextInput>\n      <SearchBar\n      // key={key.id}\n      />\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n        {image && (\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\n        )}\n      </View>\n      {plantImgURL ? (\n        <Image\n          style={styles.plantImage}\n          source={{\n            uri: plantImgURL,\n          }}\n        />\n      ) : (\n        <Text> No Image added</Text>\n      )}\n      <Pressable onPress={submitPlant} style={styles.addplant}>\n        <Text>ADD PLANT</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { alignItems: 'center', justifyContent: 'center', flex: 1 },\n  searchBar: {\n    borderRadius: 80,\n    height: 40,\n    width: 200,\n    fontSize: 12,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 10,\n  },\n  plantImage: {\n    height: 160,\n    width: 160,\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 10,\n    borderRadius: 60,\n  },\n  addplant: {\n    borderWidth: 1,\n    backgroundColor: 'rgb(151,179,128)',\n    marginTop: 20,\n    borderRadius: 5,\n    width: 120,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\nexport default AddPlant;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}